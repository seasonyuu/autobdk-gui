name: Build

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            arch: x64
            platform: darwin
          - os: macos-latest
            arch: arm64
            platform: darwin

          # Windows builds
          - os: windows-latest
            arch: x64
            platform: win32
          - os: windows-latest
            arch: arm64
            platform: win32

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run make -- --arch=${{ matrix.arch }}
        env:
          ARCH: ${{ matrix.arch }}

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'darwin'
        uses: actions/upload-artifact@v4
        with:
          name: autobdk-gui-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            out/make/**/*.zip
          retention-days: 30

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'win32'
        uses: actions/upload-artifact@v4
        with:
          name: autobdk-gui-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            out/make/**/*.exe
          retention-days: 30

      - name: List build outputs
        shell: bash
        run: |
          echo "Build outputs:"
          ls -R out/make || true

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: always() && startsWith(github.ref, 'refs/tags/') && (needs.build.result == 'success' || needs.build.result == 'failure')
    permissions:
      contents: write

    steps:
      - name: Debug info
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "Is tag: ${{ startsWith(github.ref, 'refs/tags/') }}"
          echo "Tag name: ${{ github.ref_name }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets

          # Find and rename files for release
          find artifacts -name "*.zip" -exec cp {} release-assets/ \;
          find artifacts -name "*.exe" -exec cp {} release-assets/ \;

          # Rename files with platform and arch information
          cd release-assets
          for file in *; do
            if [ -f "$file" ]; then
              echo "Found: $file"
            fi
          done
          ls -lh

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
